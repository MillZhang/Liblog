{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\topic\\controller\\create.js"
    ],
    "names": [
        "indexAction",
        "assign",
        "session",
        "uinfo",
        "think",
        "isEmpty",
        "model",
        "getUserPic",
        "name",
        "upic",
        "findAll",
        "itemList",
        "pic",
        "displayView",
        "redirect",
        "doaddAction",
        "mycreatetime",
        "datetime",
        "post",
        "updatetime",
        "data",
        "createtime",
        "updateRecord",
        "id",
        "rs",
        "success",
        "addRecord",
        "increpoint",
        "author",
        "config",
        "points",
        "editAction",
        "myid",
        "get",
        "findOne",
        "topicInfo",
        "savereplyAction",
        "marked",
        "require",
        "setOptions",
        "renderer",
        "Renderer",
        "gfm",
        "tables",
        "breaks",
        "pedantic",
        "sanitize",
        "smartLists",
        "smartypants",
        "text",
        "json",
        "status",
        "errno",
        "errmsg",
        "html",
        "comment",
        "isexist",
        "tid",
        "updata",
        "updateauthor",
        "updatepic",
        "fail",
        "add",
        "where",
        "increment",
        "replycount",
        "postlikeAction",
        "liker",
        "likers",
        "item",
        "arr",
        "split",
        "n",
        "indexOf",
        "push",
        "newlikers",
        "join",
        "m",
        "length",
        "update",
        "like",
        "likeCount",
        "splice",
        "removereplyAction",
        "delete",
        "decrement",
        "removeitemAction",
        "uploadeditorAction",
        "IS_USE_OSS",
        "ALIOSS",
        "service",
        "alioss",
        "file",
        "extend",
        "upload",
        "filepath",
        "path",
        "newpath",
        "liFormatDate",
        "Date",
        "toLocaleDateString",
        "uploadPath",
        "UPLOAD_PATH",
        "mkdir",
        "basename",
        "renameSync"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\topic\\controller\\create.js",
    "sourcesContent": [
        "'use strict';\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport Base from './base.js';\r\n\r\nexport default class extends Base {\r\n  /**\r\n   * index action\r\n   * @return {Promise} []\r\n   */\r\n  async indexAction(){\r\n       this.assign(\"title\",\"新建主题\");\r\n       let uinfo=await this.session('uInfo');\r\n       if(!think.isEmpty(uinfo)){\r\n           let upic=await this.model(\"topic\").getUserPic({name:uinfo.name});\r\n           let itemList=await this.model(\"topic\").findAll(\"topic_item\");\r\n           this.assign('itemList',itemList);\r\n           this.assign('uinfo',uinfo);\r\n           this.assign('upic',upic.pic);\r\n           return this.displayView(\"create_index\");\r\n       }else {\r\n         return this.redirect('/login.html');\r\n       }\r\n  }\r\n\r\n  async doaddAction(){   //编辑或者新增主题\r\n      let mycreatetime=think.datetime(this.post('createtime'));\r\n      let updatetime=think.datetime(this.post('updatetime'));\r\n      let data=await this.post();\r\n      data.createtime=mycreatetime;\r\n      data.updatetime=updatetime;\r\n      if(!think.isEmpty(this.post(\"id\"))){\r\n          let rs=await this.model(\"topic\").updateRecord(\"topic\",{id:data.id},data);\r\n          if(rs) return this.success();\r\n      }else{\r\n          let rs=await this.model(\"topic\").addRecord(\"topic\",data);\r\n          let points=await this.model(\"topic\").increpoint({name:data.author},this.config('point.addtopic'));\r\n          if(rs) return this.success();\r\n      }\r\n  }\r\n\r\n  async editAction(){\r\n    this.assign(\"title\",\"编辑主题\");\r\n    let myid=this.get(\"tid\");\r\n    let uinfo=await this.session('uInfo');\r\n    if(!think.isEmpty(uinfo)){\r\n        let topicInfo=await this.model(\"topic\").findOne(\"topic\",{id:myid,author:uinfo.name});\r\n        if(!think.isEmpty(topicInfo)){\r\n          let upic=await this.model(\"topic\").getUserPic({name:uinfo.name});\r\n          this.assign('upic',upic.pic);\r\n          let itemList=await this.model(\"topic\").findAll(\"topic_item\");\r\n          this.assign('uinfo',uinfo);\r\n          this.assign(\"topicInfo\",topicInfo)\r\n          this.assign(\"itemList\",itemList)\r\n          return this.displayView(\"create_edit\");\r\n        }else {\r\n          return this.displayView(\"../common/error_404\");\r\n        }\r\n    }else {\r\n      return this.redirect('/login.html');\r\n    }\r\n  }\r\n\r\n  async savereplyAction(){\r\n    //编辑或者新增回复\r\n    let marked = require('marked');\r\n    marked.setOptions({\r\n        renderer: new marked.Renderer(),\r\n        gfm: true,\r\n        tables: true,\r\n        breaks: true,\r\n        pedantic: false,\r\n        sanitize: true,\r\n        smartLists: true,\r\n        smartypants: false\r\n    });\r\n      let mycreatetime=think.datetime(this.post('createtime'));\r\n      let data=await this.post();\r\n      data.createtime=mycreatetime;\r\n      if(data.text===''){\r\n        return this.json({status:0,errno:1,errmsg:'回复不能为空！'});\r\n      }else{\r\n        // 解析markdown\r\n        let html=marked(data.comment);\r\n        // data.comment=html;\r\n        if(!think.isEmpty(data.id)){\r\n          //编辑\r\n          let isexist=await this.model(\"topic\").findOne(\"topic_comment\",{id:data.id});\r\n          let tid=await this.model(\"topic\").findOne(\"topic\",{id:data.tid});\r\n          if(!think.isEmpty(isexist)&&!think.isEmpty(tid)){\r\n            //更新最后回复数据\r\n            let updata={\r\n              updatetime:mycreatetime,\r\n              updateauthor:data.author,\r\n              updatepic:data.pic\r\n            }\r\n            let updatetime=await this.model(\"topic\").updateRecord(\"topic\",{id:data.tid},updata);\r\n            //更新最后回复数据\r\n            // 更新回复\r\n            let rs=await this.model(\"topic\").updateRecord(\"topic_comment\",{id:data.id},data);\r\n            if(rs) return this.success();\r\n          }else{\r\n            return this.fail(\"该主题或回复不存在或已删除！\");\r\n          }\r\n        }else{\r\n          //更新最后回复数据\r\n          let updata={\r\n            updatetime:mycreatetime,\r\n            updateauthor:data.author,\r\n            updatepic:data.pic\r\n          }\r\n          let updatetime=await this.model(\"topic\").updateRecord(\"topic\",{id:data.tid},updata);\r\n          //更新最后回复数据\r\n          //增加\r\n          let rs=await this.model(\"topic_comment\").add(data);\r\n          // 增加积分\r\n          let points=await this.model(\"topic\").increpoint({name:data.author},this.config('point.addcomment'));\r\n          // 增加回复数\r\n          let replycount=await this.model(\"topic\").where({id:data.tid}).increment('replycount',1);\r\n          if(rs) return this.success();\r\n        }\r\n      }\r\n  }\r\n\r\n  async postlikeAction(){\r\n      let data=await this.post();\r\n      let liker=data.likers;\r\n      let myid=data.id;\r\n      if(!think.isEmpty(myid)){\r\n          let item=await this.model(\"topic\").findOne(\"topic_comment\",{id:myid});\r\n          let arr=(!item.likers)?[]:(item.likers).split(\",\");\r\n          let likers=arr||[];\r\n          let n=likers.indexOf(liker);\r\n          if(n<0){\r\n            likers.push(liker);\r\n            let newlikers=likers.join(\",\");\r\n            let m=likers.length;\r\n            let rs=await this.model(\"topic_comment\").where({id:myid}).update({like:m,likers:newlikers});\r\n            if(rs) return this.success({likeCount:m});\r\n          }else{\r\n            likers.splice(n,1);\r\n            let m=likers.length;\r\n            let newlikers=likers.join(\",\");\r\n            let rs=await this.model(\"topic_comment\").where({id:myid}).update({like:m,likers:newlikers});\r\n            if(rs) return this.success({likeCount:m});\r\n          }\r\n      }\r\n  }\r\n\r\n  async removereplyAction(){\r\n      let data=await this.post();\r\n      let myid=data.id;\r\n      if(!think.isEmpty(myid)){\r\n          let rs=await this.model(\"topic_comment\").where({id:myid}).delete();\r\n          // 减少回复数\r\n          let replycount=await this.model(\"topic\").where({id:data.tid}).decrement('replycount',1);\r\n          if(rs) return this.success();\r\n      }\r\n  }\r\n\r\n  async removeitemAction(){\r\n      let data=await this.post();\r\n      let myid=data.id;\r\n      if(!think.isEmpty(myid)){\r\n          let rs=await this.model(\"topic\").where({id:myid}).delete();\r\n          if(rs) return this.success();\r\n      }\r\n  }\r\n\r\n  //上传图片接口\r\n  async uploadeditorAction()\r\n  {   \r\n      let IS_USE_OSS=think.config('OSS.on');\r\n      if(IS_USE_OSS){\r\n          //上传OSS图片接口\r\n          let ALIOSS = think.service(\"alioss\"); \r\n          let alioss = new ALIOSS();\r\n          let file = think.extend({}, this.file('img'));\r\n          let rs=await alioss.upload(file);\r\n          if(rs){\r\n              return this.json(think.config('OSS.domain')+\"/\"+rs.name);\r\n          }else{\r\n              return this.json(\"上传失败！\");\r\n          }\r\n      }else{\r\n          //上传应用服务器图片接口\r\n          let file = think.extend({}, this.file('img'));\r\n          let filepath = file.path;\r\n          let newpath = liFormatDate(new Date().toLocaleDateString());\r\n          let uploadPath = think.UPLOAD_PATH + '/pics/' + newpath;\r\n          think.mkdir(uploadPath);\r\n          let basename = path.basename(filepath);\r\n          fs.renameSync(filepath, uploadPath + basename);\r\n          this.json(\"/static/upload/pics/\" + newpath + basename);\r\n      }\r\n  }\r\n\r\n}\r\n"
    ]
}